package com.incarcloud.sb2.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.i18n.LocaleChangeInterceptor;
import springfox.documentation.builders.ApiInfoBuilder;
import springfox.documentation.builders.ParameterBuilder;
import springfox.documentation.builders.PathSelectors;
import springfox.documentation.builders.RequestHandlerSelectors;
import springfox.documentation.schema.ModelRef;
import springfox.documentation.service.ApiInfo;
import springfox.documentation.service.Contact;
import springfox.documentation.service.Parameter;
import springfox.documentation.spi.DocumentationType;
import springfox.documentation.spring.web.plugins.Docket;
import springfox.documentation.swagger2.annotations.EnableSwagger2;

import java.util.ArrayList;
import java.util.List;

/**
 * Swagger2配置
 *
 * @author Aaric, created on 2019-06-27T17:27.
 * @since 0.2.1-SNAPSHOT
 */
@Configuration
@EnableSwagger2
public class SwaggerConfiguration {

    @Bean
    public Docket createRestApi() {
        return new Docket(DocumentationType.SWAGGER_2)
                .apiInfo(apiInfo())
                .globalOperationParameters(globalOperationParameters())
                .groupName("Default Group")
                .select()
                .apis(RequestHandlerSelectors.basePackage("com.incarcloud.sb2"))
                .paths(PathSelectors.any())
                .build();
    }

    protected ApiInfo apiInfo() {
        return new ApiInfoBuilder()
                .title("Java RESTful API.")
                .description("This document is generated by spring fox.")
                .termsOfServiceUrl("http://localhost:9090")
                .contact(new Contact("Aaric", "https://github.com/aaric", "qlhan@incarcloud.com"))
                .version("0.2.1-SNAPSHOT")
                .build();
    }

    protected List<Parameter> globalOperationParameters() {
        ParameterBuilder parameterBuilder = new ParameterBuilder();

        parameterBuilder.name(LocaleChangeInterceptor.DEFAULT_PARAM_NAME).description("国际化参数，默认zh_CN(简体中文), en_US(英文)")
                .modelRef(new ModelRef("string"))
                .parameterType("query")
                .required(false);

        List<Parameter> parameters = new ArrayList<Parameter>();
        parameters.add(parameterBuilder.build());
        return parameters;
    }
}
