allprojects {
    group 'com.incarcloud'
    version '0.8.0-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'checkstyle'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    ext {
        jjwtVersion = "0.10.+"
        lombokVersion = "1.18.8"
        springBootVersion = "2.1.+"
        swagger2Version = "2.9.2"
        swaggerAnnotationsVersion = "1.5.20"
        swaggerBootstrapUiVersion = "1.9.5"
    }

    repositories {
        /*jcenter()*/
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://repository.incarcloud.com/content/groups/public' }
    }

    dependencies {
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

        implementation "org.apache.commons:commons-io:1.3.2"
        implementation "org.apache.commons:commons-lang3:3.9"

        implementation "org.springframework.boot:spring-boot-starter:${springBootVersion}"

        testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
        testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

        testImplementation "junit:junit:4.12"
        testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"

        runtimeOnly "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
    }

    buildscript {
        repositories {
            /*jcenter()*/
            maven { url 'https://maven.aliyun.com/repository/public' }
            maven { url 'https://repository.incarcloud.com/content/groups/public' }
        }

        dependencies {
            classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        }
    }

    compileJava {
        options.encoding = "UTF-8"
        options.compilerArgs << "-Xlint:unchecked"
    }

    compileTestJava {
        options.encoding = "UTF-8"
        options.compilerArgs << "-Xlint:unchecked"
    }

    task checkstyle(type: Checkstyle) {
        configFile file("../checkstyle/alibaba_checks.xml")
        ignoreFailures true
        showViolations true
        source = fileTree('src')
        include '**/*.java'
        exclude '**/gen/**', '**/build/**', '**/*Test.java'
        classpath = files()
    }

    defaultTasks "assemble"
}