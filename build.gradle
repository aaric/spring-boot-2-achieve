apply plugin: "org.sonarqube"

buildscript {
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://maven.aliyun.com/repository/public' }
    }
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7.1"
    }
}

allprojects {
    group 'com.incarcloud'
    version '1.1.0-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'checkstyle'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    ext {
        jjwtVersion = "0.10.+"
        lombokVersion = "1.18.8"
        springBootVersion = "2.1.+"
        swagger2Version = "2.8.0"
        swaggerAnnotationsVersion = "1.5.20"
        swaggerBootstrapUiVersion = "1.9.6"
    }

    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://repository.incarcloud.com/content/groups/public' }
    }

    dependencies {
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

        compile "org.apache.commons:commons-io:1.3.2"
        compile "org.apache.commons:commons-lang3:3.9"

        compile "org.springframework.boot:spring-boot-starter:${springBootVersion}"

        testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
        testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

        testCompile "junit:junit:4.12"
        testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"

        runtime "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
    }

    buildscript {
        repositories {
            maven { url 'https://plugins.gradle.org/m2/' }
            maven { url 'https://maven.aliyun.com/repository/public' }
        }

        dependencies {
            classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        }
    }

    compileJava {
        options.encoding = "UTF-8"
        options.compilerArgs << "-Xlint:unchecked"
    }

    compileTestJava {
        options.encoding = "UTF-8"
        options.compilerArgs << "-Xlint:unchecked"
    }

    task checkstyle(type: Checkstyle) {
        configFile file("${rootDir}/config/checkstyle/checkstyle.xml")
        ignoreFailures true
        showViolations true
        source = fileTree('src')
        include '**/*.java'
        exclude '**/test/**'
        exclude '**/build/**'
        classpath = files()
    }

    sonarqube {
        properties {
            property "sonar.sourceEncoding", "UTF-8"
        }
    }

    defaultTasks "assemble"
}